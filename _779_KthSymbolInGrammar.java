class Solution {
    /*
    ** A tree structure will help here:
    **                  0
    **              /       \
    **            0          1
    **          /   \       /  \
    **         0     1     1     0
    **       /  \   / \    /\    /\
    **      0    1  1  0  1  0  0  1
    ** Key observation: if k%2 ==0, (n,k) will be the second ele generated
    ** by (n-1, k/2); if k%2==1, (n, k) will be the first ele generated by
    ** (n-1, k/2+1)
    */
    public int kthGrammar(int n, int k) {
        if (n == 1) {
            return 0;
        }
        if (k % 2 == 0) {
            if (kthGrammar(n - 1, k / 2) == 0) {
                return 1;
            } else {
                return 0;
            }
        } else {
            if (kthGrammar(n - 1, k / 2 + 1) == 0) {
                return 0;
            } else {
                return 1;
            }
        }
    }
}